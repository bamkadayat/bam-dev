name: Bump Version, Build, and Deploy to TestFlight

on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: yarn

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Increment version
        id: bump-version
        run: |
          set -e
          echo "Reading current version from app.json"
          current_version=$(jq -r '.expo.version' app.json)
          if [ -z "$current_version" ]; then
            echo "Failed to read current version from app.json"
            exit 1
          fi
          echo "Current version: $current_version"
          IFS='.' read -r -a version_parts <<< "$current_version"
          if [ ${#version_parts[@]} -ne 3 ]; then
            echo "Version format is incorrect. Expected format: x.y.z"
            exit 1
          fi
          echo "Incrementing patch version"
          ((version_parts[2]++)) || { echo "Failed to increment patch version"; exit 1; }
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "New version: $new_version"
          echo "Updating app.json with new version"
          jq --arg new_version "$new_version" '.expo.version = $new_version' app.json > tmp.$$.json && mv tmp.$$.json app.json || { echo "Failed to update app.json"; exit 1; }
          if [ -f package.json ]; then
            echo "Updating package.json with new version"
            jq --arg new_version "$new_version" '.version = $new_version' package.json > tmp.$$.json && mv tmp.$$.json package.json || { echo "Failed to update package.json"; exit 1; }
          fi

      - name: Commit version bump
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add app.json
          if [ -f package.json ]; then git add package.json; fi
          git commit -m "chore: bump version to $new_version"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
          git push origin HEAD:main

  build-and-deploy:
    needs: bump-version
    runs-on: ubuntu-latest

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: yarn

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install

      - name: EAS build for iOS
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EAS_BUILD_PROFILE: production
        run: |
          eas build --platform ios --profile production --non-interactive

      - name: Upload to TestFlight
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          eas submit --platform ios --latest --non-interactive || {
            cat .eas/eas.log;
            exit 1;
          }